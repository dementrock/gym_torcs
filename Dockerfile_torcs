FROM ubuntu:16.04

# ========== Anaconda ==========

# https://github.com/ContinuumIO/docker-images/blob/master/anaconda/Dockerfile
RUN apt-get update --fix-missing && apt-get install -y wget bzip2 ca-certificates \
    libglib2.0-0 libxext6 libsm6 libxrender1 \
    git mercurial subversion
RUN echo 'export PATH=/opt/conda/bin:$PATH' > /etc/profile.d/conda.sh && \
    wget  --no-check-certificate --quiet https://repo.continuum.io/archive/Anaconda2-2.5.0-Linux-x86_64.sh && \
    /bin/bash /Anaconda2-2.5.0-Linux-x86_64.sh -b -p /opt/conda && \
    rm /Anaconda2-2.5.0-Linux-x86_64.sh

RUN apt-get install -y curl grep sed dpkg && \
    TINI_VERSION=`curl https://github.com/krallin/tini/releases/latest | grep -o "/v.*\"" | sed 's:^..\(.*\).$:\1:'` && \
    curl -L "https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini_${TINI_VERSION}.deb" > tini.deb && \
    dpkg -i tini.deb && \
    rm tini.deb && \
    apt-get clean

ENV PATH /opt/conda/bin:$PATH
# http://bugs.python.org/issue19846
# > At the moment, setting "LANG=C" on a Linux system *fundamentally breaks Python 3*, and that's not OK.
ENV LANG C.UTF-8
ENTRYPOINT [ "/usr/bin/tini", "--" ]

# ========== Special Deps ==========
RUN apt-get -y install git make cmake unzip
# RUN pip install awscli
# ALE requires zlib
RUN apt-get -y install zlib1g-dev
# MUJOCO requires graphics stuff (Why?)
RUN apt-get -y build-dep glfw
RUN apt-get -y install libxrandr2 libxinerama-dev libxi6 libxcursor-dev
# copied from requirements.txt
# RUN pip install imageio tabulate nose 

# ========== Add codebase ==========


# RUN pip install joblib pyprind mako ipdb 
# RUN pip install -e git://github.com/Lasagne/Lasagne.git@19b9d958507e7300e355d7cd1a6bbff2c7726c07#egg=Lasagne
# RUN conda install --yes -c https://conda.anaconda.org/kne pybox2d
# RUN conda install --yes -c https://conda.binstar.org/tlatorre pygame
# RUN pip install --no-deps -U git+https://github.com/Theano/theano
# RUN pip install PyOpenGL readchar

RUN apt-get install -y vim ack-grep


RUN apt-get update && apt-get install -y \
  libprotobuf-dev \
  libleveldb-dev \
  libsnappy-dev \
  libopencv-dev \
  libboost-all-dev \ 
  libhdf5-serial-dev \ 
  protobuf-compiler \ 
  gcc-4.8 \ 
  g++-4.8 \ 
  gcc-4.8-multilib \  
  g++-4.8-multilib \ 
  gfortran \ 
  libjpeg62 \ 
  libfreeimage-dev \  
  libatlas-base-dev \  
  libopenblas-dev \
  git \ 
  bc \ 
  wget \ 
  curl \ 
  unzip \ 
  cmake \ 
  liblmdb-dev \  
  pkgconf

RUN update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-4.8 30 && \
  update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-4.8 30 && \ 
  update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.8 30 && \
  update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.8 30

RUN apt-get install -y libgflags-dev libgoogle-glog-dev liblmdb-dev protobuf-compiler


ENV PYTHONPATH /root/code/rllab:$PYTHONPATH

RUN apt-get build-dep -y python-pygame

# Install TORCS

RUN apt-get install -y libglib2.0-dev  libgl1-mesa-dev libglu1-mesa-dev  freeglut3-dev  libplib-dev  libopenal-dev libalut-dev libxi-dev libxmu-dev libxrender-dev  libxrandr-dev libpng12-dev 
RUN apt-get install -y xorg-dev libglu1-mesa libgl1-mesa-dev xvfb libxinerama1 libxcursor1 xdotool pulseaudio
RUN gpasswd -a root pulse-access

RUN git clone https://github.com/dementrock/gym_torcs.git /opt/gym_torcs && \
    cd /opt/gym_torcs && \
    git checkout 9cfcc7450bcfe52f7dd301626636699812fb510a

WORKDIR /opt/gym_torcs/vtorcs-RL-color

RUN ./configure && make && make install && make datainstall

# ADD vimrc /root/.vimrc
# ADD vim /root/.vim

ADD rllab/environment.yml /root/code/rllab/environment.yml
RUN cd /root/code/rllab && conda env update -f /root/code/rllab/environment.yml
 
ENV PATH /opt/conda/envs/rllab/bin:$PATH

ADD rllab /root/code/rllab

WORKDIR /root/code/rllab

RUN echo "source activate rllab" >> /root/.bashrc
